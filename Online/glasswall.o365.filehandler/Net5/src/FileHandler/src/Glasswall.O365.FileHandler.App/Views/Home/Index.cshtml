@model HomeModel

@{
    ViewData["Title"] = "Home Page";
}

<div class="row" style="color: #fff;
        padding: 5rem;
        background-image: url(https://www.glasswallsolutions.com/wp-content/uploads/2019/11/Header-Image-scaled.jpg);
        -webkit-clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%)">
    <div class="col">
        <div class="m-5 p-5 text-white">
            <h1 class="display-2">Glasswall Filehandler</h1>
            <p class="lead">To connect your OneDrive for Business and SharePoint environment to this file handler, sign in using the link in the top right corner.</p>
        </div>
    </div>
</div>


<div class="row">
    <div class="col-md-4">
        <h2>Getting started</h2>
        <p>
            This sample provides a example of how you can integrate your application with OneDrive for Business and SharePoint through File Handlers.
            This file handler implements a custom action on files that allows you to download a file using Glasswall rebuild engine.
        </p>
    </div>
    @if (!string.IsNullOrEmpty(Model.SignInName))
    {
        <div class="col-md-4">
            <h2>Signed In</h2>
            <p>Welcome @Model.DisplayName. To try out Glasswall Filehandler, hop over to <a href="@Model.OneDriveUrl">your OneDrive and try it out!</a></p>
            <p><a class="btn btn-primary" href="@Model.OneDriveUrl">Try it in OneDrive &raquo;</a></p>
        </div>
    }
    else
    {
        <div class="col-md-4">
            <h2>User Sign-In</h2>
            <p><a asp-area="MicrosoftIdentity" asp-controller="Account" asp-action="SignIn">Sign in as a user</a> to enable the file handler extension on your account.</p>
      </div>
    }

    <div class="col-md-4">
        <h2>Admin Sign-In</h2>
        <p><a asp-controller="Home" asp-action="SignInAdmin">Sign in as an admin</a> to enable the file handler extension for your entire organization.</p>
    </div>
</div>
